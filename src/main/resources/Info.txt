
 Spring Boot의 로직 
 
 client  ==dto====> Controller ==dto====> Service ===dto===> Repository===> Entity ====> DB 
		     					(비즈니스 로직)              (DAO, DB를 직접접근)
		     					
@Autowired  : 객체를 Spring Container에서 생성해서 주입 ( DI : 의존성 주입  ) 
	-- Test 코드에서 사용. 동인한 타입을 찾아서 객체를 생성 
	
//H2 DB는 멀티 작동이 안됨 
   // H2 에 Test 코드에서 값을 넣을때는 서비스가 중지 되어 있어야 한다. 
   
  
  
  JPA 사용 
  1. 라이브러리 등록
  	implementation 'org.springframework.boot:spring-boot-starter-data-jpa
  2. JPA 설정 
  	spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
	spring.jpa.hibernate.ddl-auto=update  
	
  3. Entity 클래스 생성 
  4. Repository 생성 <인터페이스>  : JpaRepository<Question, Integer> 를 상속 해서 생성 
  		findAll()  :  테이블의 전체 레코드를 검색 : select * from question 
  		findId(1)   :  레코드 하나				: select * from question where id = 1
  		save() :	insert, update 
  		delete() :    delete 
  		count() : 	<Question 테이블의 레코드의 총 갯수 > 
  		